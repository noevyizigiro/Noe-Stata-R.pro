/*
Noe Vyizigiro
Causal Inference
Fall 2024

Assignment 1: Lab Experiment
*/

clear all

global noeVy "/Users/noevyizigiro/iCloud Drive (Archive)/Documents/Documents /Fall_24/Causal Inference/Assignment1/Analysis"

cd "$noeVy"

global pathDoFile 	"$noeVy/Program_Files" //where new do files go
global pathOutput 	"$noeVy/Output" //where the results are stored (charts and tables)
global Data 	"$noeVy/Data" //where data data is located

*******Data Wrangling*******
*_______________________________________________________________________________*

**import the data

import excel "$Data/AI-experiment-pilot_September 26, 2024_17.50.xlsx", firstrow //or you can use clear firstrow after importing them

**rename all the variables in lowwer case
rename*, lower  //or rename_all, lower

**delete some observations
//drop in 1/2 

drop if real(finished) ==.

**first destring the variable that have numbers
quietly:destring _all, replace

**drop observations that came before startdate
drop if date(startdate, "MDYhm")<daily("9/25/2024", "MDY")
drop if q_recaptch < 1
drop if finished ==0 //drop all unfinished survey


**generate, rename, and destring variables

rename responseid id
//egen id =group(responseid) // unique participant identifier
label var id "Unique participant identifier"

gen treated_AI =0 //generate treated_AI
replace treated_AI =1 if fl_755_do =="Essay-AI" 
label var treated_AI "Assigned to treatment group"
label define ai 1 "Used AI" 0 "Not used AI"
label values treated_AI ai

label var age "Age"

encode sex, gen (gender) //this generate a variable gender autogenerated numlabels
label var gender "Gender category"

local cat1 `" "White" "'
local cat2 `" "Black or African American" "'
local cat3 `" "Asian" "'
local cat4 `" "Hispanic or Latino" "White,Hispanic or Latino" "Black or African American,Hispanic or Latino" "'
local cat5 `" "White,Asian,Other (Please specify)" "Prefer not to say" "White,Black or African American" "White,Asian" "'

**collapsing race categories into few categories in non-fragile way
rename race racestr
gen race =1 if racestr =="White"
replace race =2 if racestr =="Black or African American"
replace race =3 if racestr =="Asian"
replace race =4 if strpos(racestr, "Hispanic")>0
replace race =5 if race ==.

label variable race "Race/Ethnicity"

label define racen 1 "White" 2 "Black" 3 "Asian" 4 "Hispanic" 5 "Other"
label values race racen 

**collapsing income into few categories as well

encode income, generate(income2)
//numlabel , add

local low "1 4 11 12 13"
local middle "6 7 8 9 10"
local upper "2 3 5"
foreach l of local low{
	foreach m of local middle{
		foreach u of local upper{
			qui:replace income ="1" if income2 ==`l'
			qui:replace income ="2" if income2 ==`m'
			qui:replace income ="3" if income2 ==`u'
		}
	}
}
destring income, replace

label define incomen 1 "<$30,000" 2 "$30,000 to $99,000" 3 "$100,000 or more" 
label values income incomen
label var income "Income($)"


gen q2_date_clean = q2_date //remove special character
replace q2_date_clean = ustrregexra(q2_date_clean, "[^a-zA-Z0-9 ]", "-")

gen score_q1 = 0

replace score_q1 = score_q1 + 1 if strpos(lower(q1_causes), "natural resources like coal and iron") > 0
replace score_q1 = score_q1 + 1 if strpos(lower(q1_causes), "rise of agricultural productivity") > 0
replace score_q1 = score_q1 + 1 if strpos(lower(q1_causes), "development of new technologies") > 0

label var score_q1 "Score on Q1: Causes of the Industrial Revolution"

gen score_q2 = 0
replace score_q2=1 if q2_date_clean=="1760---1840" //creating score
label var score_q2 "Score on Q2: Dates of Industrial Revolution"

gen score_q3 =0
replace score_q3 =1 if q3_country=="Great Britain"
label var score_q3 "Score on Q3: Origin country of the Industrial Revolution"

gen score_q4 =0
replace score_q4 =1 if q4_industry=="Textiles"
label var score_q4 "Score on Q4: 1st industry transformed by the Industrial Revolution"

gen score_q5 =0
replace score_q5 =1 if q5_invention=="The steam engine"
label var score_q5 "Score on Q5: Invention associated with the Industrial Revolution"

gen score_q6 =0
replace score_q6 =1 if q6_urban=="Growth of cities and urbanization"
label var score_q6 "Score on Q6: Urbanization effects of Industrial Revolution"

gen score_q7 =0
replace score_q7 =1 if q7_workforce=="Women and children"
label var score_q7 "Score on Q7: Primary factory workforce in Industrial Revolution"

gen score_q8 =0
replace score_q8 =1 if q8_economists=="Joel Mokyr"
label var score_q8 "Score on Q8: Economist known for theory about tech change in Industrial Revolution"

//total score
egen score_total = rsum(score_q1-score_q8)
label var score_total "Total score on the Industrial Revolution questions (0-10)"


encode baseline_knowledge, gen(report_knowledge)
label var report_knowledge "Self-reported prior knowledge about the Industrial Revolution"

replace self_reported_learn="I didn't learn anything new." if self_reported_learn=="I didnâ€™t learn anything new."
encode self_reported_learn, gen(report_learned)
label var report_learned "Self-reported learning by researching and writing the essay"

encode ai_bots_1, gen(ai_familiar1)
encode ai_bots_2, gen(ai_familiar2)
encode ai_bots_3, gen(ai_familiar3)
encode ai_bots_4, gen(ai_familiar4)

** creating a loop to label the variables above
local var "ai_familiar1 ai_familiar2 ai_familiar3 ai_familiar4"
local varlabels `" "Response to :I am very familiar with AI chatbots" "Response to : I use AI chatbots regularly" "Response to: I used an AI chatbot to help with writing the essay" "Response to: I used external resources to help answer the questions" "'

forval n = 1/4{ //runs 4 times iterating from number 1 to 4
    local a: word `n' of `varlabels' //function word extracts individual words from a string or macro, n refers the position of the word( in this case it's a sentence in quotation, which is considered as one word or antity)
    local b: word `n' of `var'
    di "variable `b', label `a'" //print to check if they match
    label var `b' "`a'" //assign the labels
}

order id treated_AI age gender race income score_q1 score_q2 score_q3 score_q4 score_q5 score_q6 score_q7 score_q8 score_total report_knowledge report_learned ai_familiar1 ai_familiar2 ai_familiar3 ai_familiar4

keep id treated_AI age gender race income score_q1 score_q2 score_q3 score_q4 score_q5 score_q6 score_q7 score_q8 score_total report_knowledge report_learned ai_familiar1 ai_familiar2 ai_familiar3 ai_familiar4

**Save the cleaned data

save "$Data/Vyizigiro_Assignment1_CleanData", replace

**end do file!
