mutate(
dem_lag_7095 = ifelse(year==1995,lag(age_median),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = ifelse(year==1995,lag(age_median,n=2),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
mutate(
dem_lag_7095 = ifelse(year==1995,lag(age_median,n=2),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
mutate(
dem_lag_7095 = lag(age_median,n=2),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
mutate(
dem_lag_7095 = lag(age_median,n=25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(age_median,n=25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(age_median,25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(dem_ind,25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(dem_ind,25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
pdim(pinc_dem)
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(dem_ind,N=25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
pinc_dem %>%
pinc_dem %>%
group_by(country_id)%>%
mutate(
dem_lag_7095 = lag(dem_ind,n=25),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc), NA)
)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pdim(pinc_dem) # to check the status of the panel data
pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
View(pinc_dem)
pinc_dem$dem_lag_7095.1<-lag(pinc_dem$dem_ind)
View(pinc_dem)
pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind,n=2)
View(pinc_dem)
pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind,n=25)
View(pinc_dem)
pinc_dem$dem_lag_7095.l<-lag(pinc_dem$dem_ind,n=25)
pinc_dem$dem_lag_7095<-diff(pinc_dem$dem_ind,n=25)
pinc_dem$dem_lag_7095<-diff(pinc_dem$dem_ind)
View(pinc_dem)
pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
View(pinc_dem)
#clear the environment
rm(list = ls())
library(tidyverse)
if(!require("skimr")) install.packages("skimr")
library(skimr)# quickly skim the dataset
if(!require("psych")) install.packages("psych")
library(psych) # comprehensive summary table
library(lmtest) # for robust SE
if(!require("sandwich")) install.packages("sandwich")
library(sandwich)
if(!require("plm")) install.packages("plm")
library(plm) # panel linear model
inc_dem<-read_csv("income_democracy.csv")
skim(inc_dem) # help in quicky skiming the dataset
describe(inc_dem) # provide an comprehensive summary table
sum_dem_ind<-inc_dem%>%
group_by(country)%>%
summarise(mean=mean(dem_ind, na.rm = TRUE),
sd = sd(dem_ind, na.rm = TRUE),
)
sum_dem_ind
inc_dem<-inc_dem%>%
arrange(year,country)%>%
arrange(country, year)%>%
mutate(dem_average = mean(dem_ind, na.rm = TRUE))
# generate a variable that is the mean democracy index for each country
inc_dem<-inc_dem%>%
group_by(country)%>%
mutate(dem_c_avg =mean(dem_ind, na.rm = TRUE))
#generate a variable that is the mean gdppc for each country
inc_dem<-inc_dem%>%
group_by(country)%>%
mutate(gdp_c_avg = mean(log_gdppc, na.rm = TRUE))
ggplot(inc_dem, aes(x=gdp_c_avg,y=dem_c_avg))+
geom_point()+
geom_smooth(method = "lm", se=FALSE, color="red")+
labs(
title = "Democracy and Income",
subtitle = "average 1960-2000",
x ="Log GDP per capita",
y = "Democracy Index"
)
filtered_graph<-inc_dem%>%
filter(year==1990)%>%
ggplot(aes(x=log_gdppc,y=dem_ind))+
geom_point()+
geom_smooth(method = "lm", se=FALSE, color="red")+
labs(
title = "Democracy and Income",
subtitle = "1990",
x ="Log GDP per capita",
y = "Democracy Index"
)
filtered_graph
m1 <- rlm(dem_ind ~ log_gdppc, data = inc_dem)
# Summarize the model
summary(m1)
# Compute robust standard errors
robust_se <- vcovHC(m1, type = "HC1")
# Display the coefficients with robust standard errors
summary_robust <- coeftest(m1, vcov = robust_se)
print(summary_robust)
lm_model<-lm(dem_ind~log_gdppc, data = inc_dem)
clustered_SE<-vcovCL(lm_model, cluster = ~country)
se_clustered<-sqrt(diag(clustered_SE))
stargazer(summary_robust,lm_model,
type = "text",
out = "robust.html",
se =list(se_clustered),
title = "Robust Model",
notes.append = TRUE)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pdim(pinc_dem) # to check the status of the panel data
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem %>%
mutate(
dem_lag_7095 = lag(dem_ind),
gdp_lag_7095 =lag(log_gdppc)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
#clear the environment
rm(list = ls())
library(tidyverse)
if(!require("skimr")) install.packages("skimr")
library(skimr)# quickly skim the dataset
if(!require("psych")) install.packages("psych")
library(psych) # comprehensive summary table
library(lmtest) # for robust SE
if(!require("sandwich")) install.packages("sandwich")
library(sandwich)
if(!require("plm")) install.packages("plm")
library(plm) # panel linear model
inc_dem<-read_csv("income_democracy.csv")
skim(inc_dem) # help in quicky skiming the dataset
describe(inc_dem) # provide an comprehensive summary table
sum_dem_ind<-inc_dem%>%
group_by(country)%>%
summarise(mean=mean(dem_ind, na.rm = TRUE),
sd = sd(dem_ind, na.rm = TRUE),
)
sum_dem_ind
inc_dem<-inc_dem%>%
arrange(year,country)%>%
arrange(country, year)%>%
mutate(dem_average = mean(dem_ind, na.rm = TRUE))
# generate a variable that is the mean democracy index for each country
inc_dem<-inc_dem%>%
group_by(country)%>%
mutate(dem_c_avg =mean(dem_ind, na.rm = TRUE))
#generate a variable that is the mean gdppc for each country
inc_dem<-inc_dem%>%
group_by(country)%>%
mutate(gdp_c_avg = mean(log_gdppc, na.rm = TRUE))
ggplot(inc_dem, aes(x=gdp_c_avg,y=dem_c_avg))+
geom_point()+
geom_smooth(method = "lm", se=FALSE, color="red")+
labs(
title = "Democracy and Income",
subtitle = "average 1960-2000",
x ="Log GDP per capita",
y = "Democracy Index"
)
filtered_graph<-inc_dem%>%
filter(year==1990)%>%
ggplot(aes(x=log_gdppc,y=dem_ind))+
geom_point()+
geom_smooth(method = "lm", se=FALSE, color="red")+
labs(
title = "Democracy and Income",
subtitle = "1990",
x ="Log GDP per capita",
y = "Democracy Index"
)
filtered_graph
m1 <- rlm(dem_ind ~ log_gdppc, data = inc_dem)
# Summarize the model
summary(m1)
# Compute robust standard errors
robust_se <- vcovHC(m1, type = "HC1")
# Display the coefficients with robust standard errors
summary_robust <- coeftest(m1, vcov = robust_se)
print(summary_robust)
lm_model<-lm(dem_ind~log_gdppc, data = inc_dem)
clustered_SE<-vcovCL(lm_model, cluster = ~country)
se_clustered<-sqrt(diag(clustered_SE))
stargazer(summary_robust,lm_model,
type = "text",
out = "robust.html",
se =list(se_clustered),
title = "Robust Model",
notes.append = TRUE)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pdim(pinc_dem) # to check the status of the panel data
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = lag(dem_ind),
gdp_lag_7095 =lag(log_gdppc)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
View(pinc_dem)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id", "year")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pdim(pinc_dem) # to check the status of the panel data
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = lag(dem_ind),
gdp_lag_7095 =lag(log_gdppc)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = ifelse(year==8,lag(dem_ind),NA),
gdp_lag_7095 =ifelse(year==8, lag(log_gdppc),NA)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
#Recall I generated a numerical value for country called country_id since xtset cannot take a string variable for entity
pinc_dem<-pdata.frame(inc_dem,index= c("country_id", "year")) #tell R that we have a panel data
identifiers<-c("country_id")
pinc_dem[,identifiers]<-lapply(identifiers, function(x) as.numeric(pinc_dem[[x]]))
pinc_dem
pdim(pinc_dem) # to check the status of the panel data
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = ifelse(year==1995,lag(dem_ind),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc),NA)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
View(pinc_dem)
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = ifelse(year==1995,lag(dem_ind, n=25),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc, n=25),NA)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
View(pinc_dem)
#Here is some nifty code to make new variables that are the difference between dem_ind and log_gdppc between 1970 and 1995
#create lagged values
#pinc_dem$dem_lag_7095<-lag(pinc_dem$dem_ind)
pinc_dem<-pinc_dem %>%
mutate(
dem_lag_7095 = ifelse(year==1995,lag(dem_ind, n=8),NA),
gdp_lag_7095 =ifelse(year==1995, lag(log_gdppc, n=8),NA)
)
# Create differences
pinc_dem <- pinc_dem %>%
mutate(
dem_diff_7095 = (dem_ind - dem_lag_7095),
gdp_diff_7095 = ( log_gdppc - gdp_lag_7095)
)
View(pinc_dem)
library(tidyverse)
library(MASS)
fertility<-read_csv("fertility.csv")
View(fertility)
fertility<-read_csv("fertility.csv")
fertility
m1<-rlm(weeksm1~morekids)
m1<-rlm(weeksm1~morekids, data = fertility)
summary(m1)
m2<-rlm(weeksm1~morekids+agem1+black+hispan+othrace, data = fertility)
summary(m2)
m2<-rlm(morekids~ samesex+agem1+black+hispan+othrace, data = fertility)
summary(m2)
fertility$morekids_hat<-predict(m2)
View(fertility)
m3<-rlm(morekids~ samesex+agem1+black+hispan+othrace, data = fertility)
summary(m3)
fertility$morekids_hat<-predict(m3)
View(fertility)
m4<-rlm(weeksm1~morekids_hat+agem1+black+hispan+othrace, data = fertility)
summary(m4)
stargazer(m1,m2,m3,m4,
type = "text",
out = "iv_example.txt",
title = "IV_example",
notes.append = TRUE
)
m1<-rlm(weeksm1~morekids, data = fertility)
summary(m1)
m2<-rlm(weeksm1~morekids+agem1+black+hispan+othrace, data = fertility)
summary(m2)
# first stage regression
m3<-rlm(morekids~ samesex+agem1+black+hispan+othrace, data = fertility)
summary(m3)
#predicted value of morekids
fertility$morekids_hat<-predict(m3)
#estimating second stage regression
m4<-rlm(weeksm1~morekids_hat+agem1+black+hispan+othrace, data = fertility)
summary(m4)
stargazer(m1,m2,m3,m4,
type = "text",
out = "iv_example.txt",
title = "IV_example",
notes.append = TRUE
)
library(tidyverse)
library(MASS)
if(require("AER")) install.packages("AER")
install.packages("AER")
library(tidyverse)
library(MASS)
if(require("AER")) install.packages("AER")
library(AER)
install.packages("AER")
library(AER)
iv<-ivreg(weeksm1~morekids+agem1+black+hispan+othrace|samesex+agem1+black+hispan+othrace, data = fertility)
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
notes.append = TRUE
)
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = c("weeksm1", "weeksm1","first_stage","second_stage", "ivregress"),
model.names = FALSE,
notes.append = TRUE
)
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = c("weeksm1", "weeksm1"),
model.names = FALSE,
notes.append = TRUE
)
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = c("weeksm1", "weeksm1"),
model.names = TRUE,
notes.append = TRUE
)
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = c("weeksm1", "weeksm1","first_stage","second_stage", "ivregress"),
model.names = FALSE,
notes.append = TRUE
)
column_names<-c("weeksm1", "weeksm1","first_stage","second_stage", "ivregress")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE,
notes.append = TRUE
)
column_names<-c("weeksm1", "weeksm1","first_stage","second_stage", "ivregress")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE
)
iv<-ivreg(weeksm1~morekids+agem1+black+hispan+othrace|samesex+agem1+black+hispan+othrace, data = fertility)
m1<-rlm(weeksm1~morekids, data = fertility)
summary(m1)
m2<-rlm(weeksm1~morekids+agem1+black+hispan+othrace, data = fertility)
summary(m2)
# first stage regression
m3<-rlm(morekids~ samesex+agem1+black+hispan+othrace, data = fertility)
summary(m3)
#predicted value of morekids
fertility$morekids_hat<-predict(m3)
#estimating second stage regression
m4<-rlm(weeksm1~morekids_hat+agem1+black+hispan+othrace, data = fertility)
summary(m4)
iv<-ivreg(weeksm1~morekids+agem1+black+hispan+othrace|samesex+agem1+black+hispan+othrace, data = fertility)
column_names<-c("weeksm1", "weeksm1","first_stage","second_stage", "ivregress")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE
)
column_names<-c("weeksm1", "weeksm1","first_stage")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE
)
column_names<-c("weeksm1", "weeksm1")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE
)
column_names<-c("wm1", "wm1","fge","sge", "ivr")
stargazer(m1,m2,m3,m4,iv,
type = "text",
out = "iv_example.txt",
title = "IV_example",
column.labels = column_names,
model.names = FALSE
)
